stages:
  - tests
  - build
  - tagging
  - statics

complexity:
  stage: tests
  image: olympus.azurecr.io/python:3.7
  script:
    - xenon --max-average A --max-modules B --max-absolute B .

tests:
  stage: tests
  image: olympus.azurecr.io/python:3.7
  script:
    - pipenv install --dev
    - export ZAGREUS_DATABASE_USER=postgres
    - export ZAGREUS_DATABASE_NAME=postgres
    - export ZAGREUS_DATABASE_HOST=$POSTGRES_PORT_5432_TCP_ADDR
    - pipenv run pytest -v --cov-report term-missing --cov=.
  services:
    - postgres:latest

style:
  stage: tests
  image: olympus.azurecr.io/python:3.7
  script:
    - flake8

build-develop:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build --pull -t "$CI_REGISTRY/zagreus:latest" .
    - docker push "$CI_REGISTRY/zagreus:latest"
  only:
    - develop

tag-develop:
  stage: tagging
  image: binkops.azurecr.io/tagbot:latest
  environment: dev
  script:
    - tagbot --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD" --source "$CI_REGISTRY/zagreus:latest" --tag "develop-$CI_COMMIT_SHORT_SHA"
  only:
    - develop

statics-dev:
  stage: statics
  image: binkops.azurecr.io/kubedeployer:latest
  environment: dev
  script:
    - bash collectstatic.sh
    - ENVIRONMENT=dev deploystatic
  only:
    - develop

build-master:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build --pull -t "$CI_REGISTRY/zagreus:$CI_COMMIT_TAG" .
    - docker push "$CI_REGISTRY/zagreus:$CI_COMMIT_TAG"
  only:
    - tags

tag-staging:
  stage: tagging
  image: binkops.azurecr.io/tagbot:latest
  environment: staging
  script:
    - tagbot --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD" --source "$CI_REGISTRY/zagreus:$CI_COMMIT_TAG" --tag "staging-$CI_COMMIT_TAG"
  only:
    - tags

statics-staging:
  stage: statics
  image: binkops.azurecr.io/kubedeployer:latest
  environment: staging
  script:
    - bash collectstatic.sh
    - ENVIRONMENT=staging deploystatic
  only:
    - tags

tag-prod:
  stage: tagging
  image: binkops.azurecr.io/tagbot:latest
  environment: prod
  script:
    - tagbot --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD" --source "$CI_REGISTRY/zagreus:$CI_COMMIT_TAG" --tag "prod-$CI_COMMIT_TAG"
  when: manual
  only:
    - tags

statics-prod:
  stage: statics
  image: binkops.azurecr.io/kubedeployer:latest
  environment: prod
  script:
    - bash collectstatic.sh
    - ENVIRONMENT=prod deploystatic
  only:
    - tags
